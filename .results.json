{"stats": {"errors": 0, "failures": 1, "passes": 0, "skipped": 0, "encoding": "UTF-8", "total": 1}, "results": [{"classname": "index_test:ScriptTest", "name": "test_address", "time": 0.0008840560913085938, "type": "failure", "errtype": "builtins.AssertionError", "message": "'36PaifVTtrLUBPWKDYjdBVKkwE96GaXzzB' != '15hZo812Lx266Dot6T52krxpnhrNiaqHya'\n- 36PaifVTtrLUBPWKDYjdBVKkwE96GaXzzB\n+ 15hZo812Lx266Dot6T52krxpnhrNiaqHya\n", "tb": "Traceback (most recent call last):\n  File \"/opt/conda/lib/python3.6/unittest/case.py\", line 59, in testPartExecutor\n    yield\n  File \"/opt/conda/lib/python3.6/unittest/case.py\", line 605, in run\n    testMethod()\n  File \"/home/sapakusa/creating-addresses-jsong-pb-denver-070918/test/index_test.py\", line 10, in test_address\n    self.assertEqual(script_pubkey.address(testnet=False), want)\n  File \"/opt/conda/lib/python3.6/unittest/case.py\", line 829, in assertEqual\n    assertion_func(first, second, msg=msg)\n  File \"/opt/conda/lib/python3.6/unittest/case.py\", line 1203, in assertMultiLineEqual\n    self.fail(self._formatMessage(msg, standardMsg))\n  File \"/opt/conda/lib/python3.6/unittest/case.py\", line 670, in fail\n    raise self.failureException(msg)\nAssertionError: '36PaifVTtrLUBPWKDYjdBVKkwE96GaXzzB' != '15hZo812Lx266Dot6T52krxpnhrNiaqHya'\n- 36PaifVTtrLUBPWKDYjdBVKkwE96GaXzzB\n+ 15hZo812Lx266Dot6T52krxpnhrNiaqHya\n\n"}]}